from re import A
import pandas as pd
import numpy as np

df = pd.read_csv ('data/mpro_exp_data2_rdkit_feat.csv')
df.drop(['lib_name'], axis = 1, inplace=True)
df.replace([np.inf, -np.inf], np.nan, inplace=True)
df.dropna(inplace=True)

train = df.loc[df['subset'] == 'train']
test = df.loc[df['subset'] == 'test']
valid = df.loc[df['subset'] == 'valid']

Y_train = train['label']
X_train = train.drop(['cmpd_id','smiles','label','subset','Unnamed: 0'], axis = 1)
y_test = test['label']
x_test = test.drop(['cmpd_id','smiles','label','subset','Unnamed: 0'], axis = 1)
y_valid = valid['label']
x_valid = valid.drop(['cmpd_id','smiles','label','subset','Unnamed: 0'], axis = 1)

from sklearn.ensemble import RandomForestClassifier
from sklearn import metrics

#Create a Gaussian Classifier
clf=RandomForestClassifier(n_estimators=100)

#Train the model using the training sets y_pred=clf.predict(X_test)
from sklearn.model_selection import train_test_split

result = []
test_sizes = [.8, .7, .6, .4, .2]
for e in test_sizes:
    for a in range(100):
        temp = []
        x_train, _, y_train, __ = train_test_split(X_train, Y_train, test_size = e, random_state = a)
        clf.fit(x_train,y_train)
        y_pred = clf.predict(x_test)
        temp.append([metrics.accuracy_score(y_test, y_pred), metrics.precision_score(y_test, y_pred), metrics.recall_score(y_test, y_pred),])
    temp = np.array(temp)
    temp2 = np.zeros(3)
    print(temp)
    print(temp2)
    for b in temp:
        temp2 += b
    for c in temp2:
        c = c/100
    result.append(temp2)

train_sizes = [0.2, 0.4, 0.6, 0.7, 0.8]

import matplotlib.pyplot as plt
import numpy as np
  
x = train_sizes
y = []
for i in result:
    y.append(i[0])
  
# first plot with X and Y data
plt.plot(x, y)
plt.xlabel("Training size")
plt.ylabel("Accuracy")
plt.title('Training size vs Accuracy')
plt.ylim(0, 1)

plt.show()
#plt.savefig("RandomForestTrainingSizeGraph.png")